{"version":3,"file":"static/js/982.e8f8282d.chunk.js","mappings":"8NACA,EAA0B,yB,SCW1B,EATgB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,qBAASC,UAAWC,EAApB,WACI,wBAAKH,IACJC,IAGZ,E,UCSUG,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,E,oBCnBPG,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,EAEpBC,EAAwB,SAAAT,GACjC,IAAMC,EAAWF,EAAeC,GAC1BQ,EAASD,EAAaP,GAE5B,IAAKQ,EACD,OAAOP,EAEX,IAAMS,EAAmBF,EAAOG,oBAMhC,OALwBV,EAASO,QAAO,YAAsB,IAAnBI,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAG7C,OAFuBD,EAAKD,oBACEG,SAASJ,IAAqBG,EAAMC,SAASJ,EAE9E,GAEJ,E,mBCpBYK,EAAOC,EAAAA,GAAAA,KAAH,2KASJC,EAAQD,EAAAA,GAAAA,MAAH,oLAULE,EAAQF,EAAAA,GAAAA,MAAH,kEAKLG,EAASH,EAAAA,GAAAA,OAAH,6QC8DnB,EA9E2B,WAEvB,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOR,EAAP,KAAaS,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAEMtB,GAAWuB,EAAAA,EAAAA,IAAYzB,GACvB0B,GAAWC,EAAAA,EAAAA,MAEXC,EAAgBtC,IAChBuC,EAAkBvC,IAElBwC,EAAe,SAAAC,GACjB,MAAwBA,EAAMC,OAAtBnB,EAAR,EAAQA,KAAMoB,EAAd,EAAcA,MACd,OAAQpB,GACJ,IAAK,OACD,OAAOS,EAAQW,GACnB,IAAK,SACD,OAAOT,EAAUS,GACrB,QACI,OAEX,EAaKC,EAAU,SAAC,GAAsB,IAApBrB,EAAmB,EAAnBA,KAAMU,EAAa,EAAbA,OACfY,EAAiBtB,EAAKuB,cAI5B,OAHelC,EAASmC,MACpB,SAAAC,GAAO,OAAIA,EAAQzB,KAAKuB,gBAAkBD,GAAkBG,EAAQxB,QAAUS,CAAvE,GAGd,EAEKgB,EAAY,WACdjB,EAAQ,IACRE,EAAU,GACb,EAED,OACI,UAACR,EAAD,CAAMwB,SAzBW,SAAAT,GACjBA,EAAMU,iBACFP,EAAQ,CAAErB,KAAAA,EAAMU,OAAAA,IAChBmB,EAAAA,GAAAA,MAAY,+CAGhBhB,GAASiB,EAAAA,EAAAA,IAAW,CAAE9B,KAAAA,EAAMU,OAAAA,KAC5BgB,IACAR,EAAMC,OAAOY,QAChB,EAgBG,WACI,UAAC1B,EAAD,CAAO2B,QAASjB,EAAhB,mBACI,SAACT,EAAD,CACI2B,KAAK,OACLjC,KAAK,OACLjB,GAAIgC,EACJK,MAAQpB,EACRkC,SAAYjB,EACZkB,QAAQ,yHACR9D,MAAM,yIACN+D,UAAQ,QAGhB,UAAC/B,EAAD,CAAO2B,QAAShB,EAAhB,qBACI,SAACV,EAAD,CACI2B,KAAK,MACLjC,KAAK,SACLjB,GAAIiC,EACJI,MAAOV,EACPwB,SAAYjB,EACZkB,QAAQ,yFACR9D,MAAM,+FACN+D,UAAQ,QAGhB,SAAC7B,EAAD,CAAQ0B,KAAK,SAAb,2BAGX,E,UCpFY5B,EAAQD,EAAAA,GAAAA,MAAH,oLAULE,EAAQF,EAAAA,GAAAA,MAAH,kECiBlB,EAvBe,WACX,IAAMR,GAASgB,EAAAA,EAAAA,IAAYjB,GACrBkB,GAAWC,EAAAA,EAAAA,MACX/B,EAAKN,IAOX,OACI,+BACI,UAAC,EAAD,oCACI,SAAC,EAAD,CACIM,GAAIA,EACJkD,KAAK,OACLb,MAAOxB,EACPsC,SAZK,SAAAhB,GACjB,IAAQE,EAAUF,EAAMC,OAAhBC,MACRP,GAASwB,EAAAA,EAAAA,GAAWjB,GACvB,QAaJ,EC1BD,EAA4B,mCCoB5B,EAhBwB,SAAC,GAA0B,IAAxBrC,EAAuB,EAAvBA,GAAIiB,EAAmB,EAAnBA,KAAMU,EAAa,EAAbA,OAC3BG,GAAWC,EAAAA,EAAAA,MAMjB,OACI,gBAAavC,UAAWC,EAAxB,UAAwCwB,EAAxC,MAAiDU,GAC7C,mBAAQuB,KAAK,SAASK,QAAS,kBANX,SAACvD,GACzB8B,GAAS0B,EAAAA,EAAAA,IAAcxD,GAC1B,CAI4CyD,CAAoBzD,EAA1B,EAA/B,sBADKA,EAMhB,EClBD,EAAuB,0BCuBvB,EAjBoB,WAChB,IAAM0D,GAAkB7B,EAAAA,EAAAA,IAAYf,GAEpC,OACI,eAAItB,UAAWC,EAAf,SACKiE,EAAgBC,KAAI,gBAAG3D,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,KAAMU,EAAb,EAAaA,OAAb,OACjB,SAAC,EAAD,CAEI3B,GAAIA,EACJiB,KAAMA,EACNU,OAAQA,GAHH3B,EAFQ,KAUhC,E,UCbY4D,EAAY,WACrB,IAAMtD,GAAWuB,EAAAA,EAAAA,IAAYzB,GACvBK,GAAYoB,EAAAA,EAAAA,IAAYrB,GACxBG,GAAQkB,EAAAA,EAAAA,IAAYnB,GAE1B,OACI,4BACI,SAAC,EAAD,CAASpB,MAAM,YAAf,UACI,SAAC,EAAD,OAEJ,UAAC,EAAD,CAASA,MAAM,WAAf,WACI,SAAC,EAAD,IACCmB,IAAcE,IAAS,SAACkD,EAAA,EAAD,IACvBvD,EAASwD,OAAS,IAAK,SAAE,EAAF,IACH,IAApBxD,EAASwD,SAAiBrD,IAAc,iEAIxD,ECRD,EAdiB,WACb,IAAMqB,GAAWC,EAAAA,EAAAA,MAMjB,OAJAgC,EAAAA,EAAAA,YAAU,WACNjC,GAASkC,EAAAA,EAAAA,MACZ,GAAE,CAAClC,KAGA,2BACI,SAAC8B,EAAD,KAGX,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","../node_modules/nanoid/index.browser.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Phonebook/Phonebook.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import PropTypes from 'prop-types';\nimport css from './Section.module.css';\n\nconst Section = ({ title, children }) => { \n    return (\n        <section className={css.section}>\n            <h2>{title}</h2>\n            {children}\n        </section>\n    )\n}\n\nexport default Section;\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = state => {\n    const contacts = selectContacts(state);\n    const filter = selectFilter(state);\n\n    if (!filter) {\n        return contacts;\n    }\n    const normalizedFilter = filter.toLocaleLowerCase();\n    const visibleContacts = contacts.filter(({ name, phone }) => {\n        const normalizedName = name.toLocaleLowerCase();\n        const result = normalizedName.includes(normalizedFilter) || phone.includes(normalizedFilter);\n        return result;\n    });\n    return visibleContacts;\n}","import styled from 'styled-components';\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-top: 50px;\n    width: 400px;\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    width: 300px;\n    height: 80px;\n    margin-bottom: 10px;\n    font-size: 20px;\n    color: #F0E9D2;\n`;\n\nexport const Input = styled.input`\n    margin-top: 10px;\n    height: 30px;\n`;\n\nexport const Button = styled.button`\n    font-size: 20px;\n    padding: 10px;\n    margin-top: 30px;\n    width: 200px;\n    border: none;\n    border-radius: 5px;\n    &:hover, &:focus{\n        cursor: pointer;\n        color: #F0E9D2;\n        background-color: #181D31;\n    }\n`;","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\n// import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { addContact } from \"redux/contacts/contactsOperations\";\nimport { selectContacts } from \"redux/contacts/contactsSelectors\";\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\n\nexport const ContactForm = () => { \n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    const contactNameId = nanoid();\n    const contactNumberId = nanoid();\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'number':\n                return setNumber(value);\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        if (isExist({ name, number })) {\n            toast.error('This contact is already in your phonebook!');\n            return;\n        }\n        dispatch(addContact({ name, number }));\n        resetForm();\n        event.target.reset();\n    };\n\n    const isExist = ({ name, number }) => {\n        const normalizedName = name.toLowerCase();\n        const result = contacts.find(\n            contact => contact.name.toLowerCase() === normalizedName || contact.phone === number\n        );\n        return result;\n    };\n\n    const resetForm = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Label htmlFor={contactNameId}> Name\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id={contactNameId}\n                    value ={name}\n                    onChange = {handleChange}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </Label>\n            <Label htmlFor={contactNumberId}> Number \n                <Input\n                    type=\"tel\"\n                    name=\"number\"\n                    id={contactNumberId}\n                    value={number}\n                    onChange = {handleChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n            </Label>\n            <Button type=\"submit\">Add contact</Button>\n        </Form>\n    )\n}\n\nexport default ContactForm;\n\n// ContactForm.propTypes = {\n//     name: PropTypes.string,\n//     phone: PropTypes.string,\n// }","import styled from 'styled-components';\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    width: 300px;\n    height: 80px;\n    margin-bottom: 10px;\n    font-size: 20px;\n    color: #F0E9D2;\n`;\n\nexport const Input = styled.input`\n    margin-top: 10px;\n    height: 30px;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { setFilter } from 'redux/contacts/filtersSlice';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => { \n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    const id = nanoid();\n\n    const changeFilter = event => {\n        const { value } = event.target;\n        dispatch(setFilter( value ));\n    }\n\n    return (\n        <>\n            <Label> Find contact by name\n                <Input\n                    id={id}\n                    type=\"text\"\n                    value={filter}\n                    onChange={changeFilter}/>\n            </Label>\n        </>\n    )\n}\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"list_item\":\"ContactListItem_list_item__mLK5h\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport css from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number }) => { \n    const dispatch = useDispatch();\n\n    const handleDeleteContact = (id) => {\n        dispatch(deleteContact(id));\n    }\n\n    return (\n        <li key={id} className={css.list_item}>{name} : {number}\n            <button type='button' onClick={() => handleDeleteContact(id)}>\n                Delete\n            </button>\n        </li>\n    )\n}\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","// import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/contactsSelectors';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport css from './ContactList.module.css';\n\n\nconst ContactList = () => { \n    const visibleContacts = useSelector(selectVisibleContacts);\n\n    return (\n        <ul className={css.list}>\n            {visibleContacts.map(({ id, name, number }) => (\n                <ContactListItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                />\n            ))}\n        </ul>\n    )\n}\n\nexport default ContactList;\n\n// ContactList.propTypes = {\n//     contacts: PropTypes.arrayOf(PropTypes.shape({\n//         id: PropTypes.string,\n//         name: PropTypes.string.isRequired,\n//         phone: PropTypes.string.isRequired,\n//     }))\n// }","import { useSelector } from \"react-redux\";\nimport Section from \"components/Section/Section\";\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Loader } from \"components/Loader/Loader\";\nimport { selectContacts, selectIsLoading, selectError } from \"redux/contacts/contactsSelectors\";\n\n\nexport const Phonebook = () => {\n    const contacts = useSelector(selectContacts);\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    return (\n        <div>\n            <Section title=\"Phonebook\">\n                <ContactForm />\n            </Section>\n            <Section title=\"Contacts\">\n                <Filter />\n                {isLoading && !error && <Loader />}\n                {contacts.length > 0 && < ContactList />}\n                {contacts.length === 0 && !isLoading && (<p>You don't have any contacts yet(</p>) }\n            </Section>\n        </div>\n    )\n}","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Phonebook } from \"components/Phonebook/Phonebook\";\nimport { fetchContacts } from \"redux/contacts/contactsOperations\";\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <main>\n            <Phonebook />\n        </main>\n    );\n}\n\nexport default Contacts;"],"names":["title","children","className","css","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","normalizedFilter","toLocaleLowerCase","name","phone","includes","Form","styled","Label","Input","Button","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","contactNameId","contactNumberId","handleChange","event","target","value","isExist","normalizedName","toLowerCase","find","contact","resetForm","onSubmit","preventDefault","toast","addContact","reset","htmlFor","type","onChange","pattern","required","setFilter","onClick","deleteContact","handleDeleteContact","visibleContacts","map","Phonebook","Loader","length","useEffect","fetchContacts"],"sourceRoot":""}